1.数据元素之间存在的逻辑结构关系称为数据的逻辑结构;
  物理结构又称为存储结构
  
  逻辑结构:集合结构 线性结构 非线性结构(层次结构(树型结构) 网状结构(图型结构 图))
  
  存储结构:顺序存储结构 非顺序存储结构(链式存储结构(链表) 索引结构 散列结构)
  
  数据的逻辑结构与存储结构是密不可分的两个方面,以后读者将会看到,任何一个算法的设计取决于选定的逻辑结构,而算法的实现则依赖于采用的存储结构。
  

2.堆栈(Stack)简称为栈。它是一种只允许在表的一端进行插入和删除操作的线性表。允许操作的一端称为栈顶，栈顶元素的位置由一个称为栈顶指针的变量（不妨用top命名改变量）给出；
另一端则称为栈底。当表中没有元素时，称之为空栈。
  堆栈的插入操作简称为入栈或者进栈，删除操作称为出栈或者退栈。（后进先出）
  
  
3.队列（Queue）简称队。是一种只允许在表的一端进行插入操作，而在表的另一端进行删除操作的线性表。允许进行插入的一端称为队尾，队尾元素的位置由一个变量（不妨用名为rear的变量）
指出；允许删除的一端称为队头，队头元素的位置由另一个变量（不妨用名为front的变量）指出。没有元素的队列称为空队。
  队列的插入操作有时也简称为进队，删除操作简称出队。（先进先出）
  队列和堆栈一样，也是一个动态结构。
  
  
4.二叉树
  满二叉树:如果一颗二叉树中的任意节点，或者是叶节点，或者有两棵非空子树，并且叶结点都集中在二叉树的最下面一层，这样的二叉树称为满二叉树。
  完全二叉树：若二叉树中最多只有最下面两层的结点的度可以小于2，并且最下面一层的结点（叶结点）都依次排列在该层最左边的位置上，这样的二叉树称为完全二叉树。
  不难看出，满二叉树是完全二叉树的一种特例。在一棵二叉树中，若除了最下面一层外，其余各层都是满的，这样的二叉树称为理想平衡树。理想平衡树包括满二叉树和完全二叉树。