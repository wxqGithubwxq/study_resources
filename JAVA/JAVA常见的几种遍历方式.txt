1.java集合遍历的几种方式总结及比较
https://www.cnblogs.com/leskang/p/6031282.html
使用 foreach 时，是不能修改正在遍历的集合 —— 至于集合中的元素，想怎么改怎么改，修改元素并不会影响到集合的状态，因为集合中保存的是元素的引用
for(String str:strList)

java 为什么遍历的时候不能删除元素,如何才能删除元素呢?
https://blog.csdn.net/wangjun5159/article/details/61415358

集合类的通用遍历方式, 用迭代器迭代:
Iterator it = list.iterator();
while(it.hasNext()) {
　　Object obj = it.next();
}
 
Map遍历方式：
 
1、通过获取所有的key按照key来遍历
//Set<Integer> set = map.keySet(); //得到所有key的集合
for (Integer in : map.keySet()) {
    String str = map.get(in);//得到每个key多对用value的值
}
 
2、通过Map.entrySet使用iterator遍历key和value
Iterator<Map.Entry<Integer, String>> it = map.entrySet().iterator();
while (it.hasNext()) {
     Map.Entry<Integer, String> entry = it.next();
       System.out.println("key= " + entry.getKey() + " and value= " + entry.getValue());
}
 
3、通过Map.entrySet遍历key和value，推荐，尤其是容量大时
for (Map.Entry<Integer, String> entry : map.entrySet()) {
    //Map.entry<Integer,String> 映射项（键-值对）  有几个方法：用上面的名字entry
    //entry.getKey() ;entry.getValue(); entry.setValue();
    //map.entrySet()  返回此映射中包含的映射关系的 Set视图。
    System.out.println("key= " + entry.getKey() + " and value= " + entry.getValue());
}
 
4、通过Map.values()遍历所有的value，但不能遍历key
for (String v : map.values()) {
    System.out.println("value= " + v);
}
 
List遍历方式：
第一种：
for(Iterator iterator = list.iterator();iterator.hasNext();){                    
    int i = (Integer) iterator.next();                   
    System.out.println(i);               
}
第二种：
Iterator iterator = list.iterator();
while(iterator.hasNext()){
    int i = (Integer) iterator.next();
    System.out.println(i);
}
第三种：
for (Object object : list) { 
    System.out.println(object); 
}
第四种：
for(int i = 0 ;i<list.size();i++) {  
    int j= (Integer) list.get(i);
    System.out.println(j);  
}