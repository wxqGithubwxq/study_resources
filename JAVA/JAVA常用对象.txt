https://www.cnblogs.com/zr123/p/8086525.html

2.Java多线程中static变量的使用
https://www.cnblogs.com/hadoop-dev/p/6860103.html
https://blog.csdn.net/yy304935305/article/details/52456771

3.sessionid在什么时候创建的
https://www.cnblogs.com/wszz/p/7778564.html
https://www.cnblogs.com/Fly-sky/p/4150624.html
https://blog.csdn.net/hearain528/article/details/47218851?readlog

3.throw throws try catch finally如何使用
https://blog.csdn.net/archer_zoro/article/details/52691173

4.unsafe类
https://blog.csdn.net/luzheqi/article/details/79097682
https://www.cnblogs.com/sunzhenchao/p/6541783.html

5.java cas详解
https://blog.csdn.net/ls5718/article/details/52563959

6.HandlerInterceptor拦截器
https://blog.csdn.net/sunp823/article/details/51694662

7.spring容器负责管理对象的生命周期,应用上下文applicationcontext向spring容器里放入我们需要容器代为管理的对象;
https://www.cnblogs.com/chenbenbuyi/p/8166304.html
tomcat是一个servlet容器,也是一个web容器,同时也是个web服务器;
HttpServletRequest是ServletRequet的一个子接口;
请求顺序:Tomcat容器→Filter→Servlet→Inteceptor→Controller,所以Filter请求的request(service())是ServletRequest,
而Inteceptor、Control里的request是HttpServletRequest；
一个servlet必须继承抽象类HttpServlet，同时HttpServlet又继承了GenericalServlet抽象类，GenericalServlet实现了Servlet接口

8.servlet
https://www.cnblogs.com/whgk/p/6399262.html
https://blog.csdn.net/xiaojiahao_kevin/article/details/51781946
https://blog.csdn.net/a3060858469/article/details/78120527


9.过滤器 拦截器 servlet controller执行先后顺序
https://www.cnblogs.com/dreamroute/p/4198087.html
过滤器和拦截器非常相似，但是它们有很大的区别
最简单明了的区别就是过滤器可以修改request，而拦截器不能
过滤器需要在servlet容器中实现，拦截器可以适用于javaEE，javaSE等各种环境
拦截器可以调用IOC容器中的各种依赖，而过滤器不能
过滤器只能在请求的前后使用，而拦截器可以详细到每个方法
区别很多，大家可以去查下https://segmentfault.com/a/1190000012072060
过滤器不能使用依赖,其根本原因在于依赖还没有被加载到容器里面
https://www.cnblogs.com/springlight/p/6297001.html

总的来说
过滤器就是筛选出你要的东西，比如requeset中你要的那部分
拦截器在做安全方面用的比较多，比如终止一些流程
网上有一张图片很不错，这里拷过来给大家看一下

10.springboot常见读取配置文件属性的方法
https://blog.csdn.net/thc1987/article/details/78789426

11.java多维数组
https://www.jb51.net/article/113767.htm
java定义数组的三种类型
int[] arr1=new int[10];  
int[] arr2={1,2,3,6};  
int[] arr3=new int[]{1,2,3,4,5,6,7,22};
https://blog.csdn.net/zbdxcyg/article/details/78546961
java定义二维数组
https://blog.csdn.net/ryj359/article/details/75453142/
https://www.cnblogs.com/xjpu/p/6106559.html

12.json类库(Json-lib、Gson、Jackson、Fastjson)
https://blog.csdn.net/moshenglv/article/details/52021263
https://blog.csdn.net/qq_37550528/article/details/79497938
总结：
Java Bean序列化为Json，性能：Jackson > FastJson > Gson > Json-lib。这4中类库的序列化结构都正确。
Json字符串反序列化为Java Bean时，性能：Jackson > Gson > FastJson >Json-lib。并且Jackson、Gson、FastJson可以很好的支持复杂的嵌套结构定义的类，而Json-lib对于复制的反序列化会出错。
Jackson、FastJson、Gson类库各有优点，各有自己的专长，都具有很高的可用性。
https://blog.csdn.net/pyfysf/article/details/79673278